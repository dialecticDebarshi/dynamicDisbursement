USE [DB_PAYROLL_TC_BETA]
GO
/****** Object:  StoredProcedure [dbo].[SP_SAVE_DETAILS_DISBURSEMENT]    Script Date: 08-05-2024 19:36:47 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- SP_SAVE_DETAILS_DISBURSEMENT 2,1,0,1,1,0,4650.25,0,'295','336','575','01-01-2024 00:00:00','31-01-2024 00:00:00', 

ALTER PROCEDURE [dbo].[SP_SAVE_DETAILS_DISBURSEMENT]
    @TenantID INT,
    @COMPANY_KEY INT,
    @HEAD_DISBURSEMENT_KEY INT,
    @HEAD_KEY INT,
    @MAST_DISBURSEMENT_TYPE_KEY INT,
    @DTLS_DISBURSEMENT_KEY INT,
    @NET_PAYABLE_AMOUNT DECIMAL(9,2),
    @DISBURSING_AMOUNT DECIMAL(9,2),
    @COSTCENTER_KEY VARCHAR(MAX),
    @DIVISION_KEY VARCHAR(MAX),
    @WAREHOUSE_KEY VARCHAR(MAX),
    @USER_KEY INT,
    @FROM_DATE VARCHAR(20),
    @TO_DATE VARCHAR(20),
    @EMP_AMOUNT EmpDisbursedNetAmnt  READONLY-- EmpDisbursedType READONLY
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

		DECLARE  @vFROM_DATE DATE 
		DECLARE  @vTO_DATE DATE
		DECLARE @BALANCE_AMMOUNT DECIMAL(9,3)
	  SET @vFROM_DATE =CONVERT(DATE, CONVERT(DATETIME, @FROM_DATE, 105), 101) 
	  SET @vTO_DATE =CONVERT(DATE, CONVERT(DATETIME, @TO_DATE, 105), 101) 

        IF (@DTLS_DISBURSEMENT_KEY = 0)
        BEGIN
            
			--========
			
   --		  DECLARE @jsonData NVARCHAR(MAX);
   --         SET @jsonData = (SELECT [Key], [Value], NetAmnt FROM @EMP_AMOUNT FOR JSON AUTO);
            
   --         DECLARE @jsonTable TABLE (EMP_KEY INT, DISBURSE_AMNT DECIMAL(9,2), NetAmnt DECIMAL(9,2));
   --         INSERT INTO @jsonTable (EMP_KEY, DISBURSE_AMNT, NetAmnt)
   --         SELECT *
   --         FROM OPENJSON(@jsonData)
   --         WHERE TRY_CAST([Value] AS DECIMAL(9,2)) IS NOT NULL;
			DECLARE @jsonData NVARCHAR(MAX);
			SET @jsonData = (SELECT [Key], [Value], [NetAmnt] FROM @EMP_AMOUNT FOR JSON AUTO);

			DECLARE @jsonTable TABLE (EMP_KEY INT, DISBURSE_AMNT DECIMAL(9,2), NetAmnt DECIMAL(9,2));
			INSERT INTO @jsonTable (EMP_KEY, DISBURSE_AMNT, NetAmnt)
			SELECT [Key], [Value], NetAmnt
			FROM OPENJSON(@jsonData)
			WITH (
				[Key] INT '$."Key"',
				[Value] DECIMAL(9,2) '$."Value"',
				NetAmnt DECIMAL(9,2) '$."NetAmnt"'
			);


			--=========CREATING HEAD & SUBDIVISION RECORD

            IF NOT EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY )--AND SEND_APPROVAL = 1)
            BEGIN
                
				IF (@HEAD_DISBURSEMENT_KEY = 0)
                BEGIN
                    SELECT @HEAD_DISBURSEMENT_KEY = ISNULL(MAX(HEAD_DISBURSEMENT_KEY), 0) + 1 FROM [HEAD_DISBURSEMENT];
                    
                    INSERT INTO [dbo].[HEAD_DISBURSEMENT]
                        ([TenantID],[HEAD_DISBURSEMENT_KEY], [DISBURSEMENT_HEADING], [DISBURSEMENT_REFNO],[DISBURSEMENT_TYPE_HEAD_KEY],
						[DISBURSEMENT_REF_DATE], [DISBURSEMENT_REMARKS],
                         [ENT_DATE], [ENT_USER_KEY], TAG_DELETE, FROM_DT_DISBURSE_TYPE, TO_DT_DISBURSE_TYPE, MAST_DISBURSEMENT_TYPE_KEY)
                    VALUES
                        (@TenantID,@HEAD_DISBURSEMENT_KEY, 'ADD YOUR HEADING', 'TS/DISBURSEMENT-A/24-25/'+CAST(@HEAD_DISBURSEMENT_KEY AS VARCHAR),
						@HEAD_KEY, GETDATE(), 'ADD YOUR REMARKS',
                         GETDATE(), @USER_KEY, 0, @vFROM_DATE, @vTO_DATE, @MAST_DISBURSEMENT_TYPE_KEY);
                
					
					EXEC SP_SAVE_COSTCENTER_DIVISION_DISBURSEMENT_BOOKING @COSTCENTER_KEY, @DIVISION_KEY, @WAREHOUSE_KEY, 0,
                                                                  @HEAD_DISBURSEMENT_KEY, @HEAD_KEY, @MAST_DISBURSEMENT_TYPE_KEY,
                                                                  @TenantID;
				END
				
				
            END
			--=========
			IF EXISTS (SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY AND APPROVAL_TAG=1 )
				BEGIN

					-- ==  LATEST TAG UPDATE IN THE DETAILS

					UPDATE DTLS_DISBURSEMENT
					SET LATEST_FLAG=0
					WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY

					-- ==  COMPLETION TAG IN THE HEAD

					SELECT  @DISBURSING_AMOUNT=SUM(DD.DISBURSING_AMOUNT),@NET_PAYABLE_AMOUNT=SUM(DD.NET_PAYABLE_AMOUNT) 
							
							FROM DTLS_DISBURSEMENT DD 
							WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1

							
							SET @BALANCE_AMMOUNT=@NET_PAYABLE_AMOUNT- @DISBURSING_AMOUNT
							
							IF(@BALANCE_AMMOUNT=0)
								BEGIN
									UPDATE [HEAD_DISBURSEMENT]
									SET COMPLETE_FLAG=1
									WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY
								END
								 
							  ELSE
								BEGIN
										INSERT INTO [dbo].[DTLS_DISBURSEMENT]
										([TenantID], COMPANY_KEY, [HEAD_DISBURSEMENT_KEY], [HEAD_KEY], [MAST_DISBURSEMENT_TYPE_KEY],LATEST_FLAG
										  ,[EMPLOYEE_MASTER_KEY], [DISBURSING_AMOUNT],[NET_PAYABLE_AMOUNT])
										SELECT
											@TenantID, @COMPANY_KEY, @HEAD_DISBURSEMENT_KEY, @HEAD_KEY, @MAST_DISBURSEMENT_TYPE_KEY, 1,*
										FROM @jsonTable;
										
										--======== 04052024 
										SELECT  @DISBURSING_AMOUNT=SUM(DD.DISBURSING_AMOUNT),@NET_PAYABLE_AMOUNT=SUM(DD.NET_PAYABLE_AMOUNT) 
							
										FROM DTLS_DISBURSEMENT DD 
										WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1

							
										SET @BALANCE_AMMOUNT=@NET_PAYABLE_AMOUNT- @DISBURSING_AMOUNT
							
										IF(@BALANCE_AMMOUNT=0)
											BEGIN
												UPDATE [HEAD_DISBURSEMENT]
												SET COMPLETE_FLAG=1
												WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY
											END
										--==========
								END


				END
           ELSE
			BEGIN
				IF EXISTS (SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY )
					BEGIN --====== FOR MULTIPLE CLICK OF SAVE BUTTON 
						IF EXISTS(SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY AND (APPROVAL_TAG IS NULL OR APPROVAL_TAG =0))
						BEGIN
						-- PROVISION OF DELETING AND INSERTING TILL GOING FOR APPROVAL
						DELETE FROM  DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY AND LATEST_FLAG=1 AND (APPROVAL_TAG IS NULL OR APPROVAL_TAG =0)
						
						INSERT INTO [dbo].[DTLS_DISBURSEMENT]
						([TenantID], COMPANY_KEY, [HEAD_DISBURSEMENT_KEY], [HEAD_KEY], [MAST_DISBURSEMENT_TYPE_KEY],LATEST_FLAG
						  ,[EMPLOYEE_MASTER_KEY], [DISBURSING_AMOUNT],[NET_PAYABLE_AMOUNT])
						SELECT
							@TenantID, @COMPANY_KEY, @HEAD_DISBURSEMENT_KEY, @HEAD_KEY, @MAST_DISBURSEMENT_TYPE_KEY, 1,*
						FROM @jsonTable;
						END
						-- ====
					END
				ELSE 
				BEGIN
					INSERT INTO [dbo].[DTLS_DISBURSEMENT]
						([TenantID], COMPANY_KEY, [HEAD_DISBURSEMENT_KEY], [HEAD_KEY], [MAST_DISBURSEMENT_TYPE_KEY],LATEST_FLAG
						  ,[EMPLOYEE_MASTER_KEY], [DISBURSING_AMOUNT],[NET_PAYABLE_AMOUNT])
						SELECT
							@TenantID, @COMPANY_KEY, @HEAD_DISBURSEMENT_KEY, @HEAD_KEY, @MAST_DISBURSEMENT_TYPE_KEY, 1,*
						FROM @jsonTable;
						--====== COMPLETION TAG
						SELECT  @DISBURSING_AMOUNT=SUM(DD.DISBURSING_AMOUNT),@NET_PAYABLE_AMOUNT=SUM(DD.NET_PAYABLE_AMOUNT) 
							
							FROM DTLS_DISBURSEMENT DD 
							WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1 --AND DD.APPROVAL_TAG=1
														
							SET @BALANCE_AMMOUNT=@NET_PAYABLE_AMOUNT- @DISBURSING_AMOUNT

							INSERT INTO tblErrorMessage(spName, errorMessage, systemDate) 
							VALUES ('[SP_SAVE_DETAILS_DISBURSEMENT]', 'PRE_BALANCE_'+CAST(ISNULL(@BALANCE_AMMOUNT,0) AS VARCHAR)
							--+CAST(@HEAD_DISBURSEMENT_KEY AS VARCHAR)+CAST(@NET_PAYABLE_AMOUNT AS VARCHAR)+CAST(@DISBURSING_AMOUNT AS VARCHAR)
							, GETDATE());
							
							IF(@BALANCE_AMMOUNT=0)
								BEGIN
									UPDATE [HEAD_DISBURSEMENT]
									SET COMPLETE_FLAG=1
									WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY

									INSERT INTO tblErrorMessage(spName, errorMessage, systemDate) 
									VALUES ('[SP_SAVE_DETAILS_DISBURSEMENT]', 'POST_IF'
									, GETDATE());

								END
						-- =========		 
				END
			END
		   
		    

            
        END
        ELSE
        BEGIN
            UPDATE [DTLS_DISBURSEMENT]
            SET NET_PAYABLE_AMOUNT = @NET_PAYABLE_AMOUNT,
                DISBURSING_AMOUNT = @DISBURSING_AMOUNT
            WHERE DTLS_DISBURSEMENT_KEY = @DTLS_DISBURSEMENT_KEY;
        END

        IF @@TRANCOUNT > 0
        BEGIN
            COMMIT TRAN;
        END
    END TRY
    BEGIN CATCH
        IF @@ERROR <> 0
        BEGIN
		    PRINT 'Error Line: ' + CAST(ERROR_LINE() AS VARCHAR) + ', Message: ' + ERROR_MESSAGE();
            ROLLBACK TRAN;
            INSERT INTO tblErrorMessage(spName, errorMessage, systemDate) 
            VALUES ('[SP_SAVE_DETAILS_DISBURSEMENT]', ERROR_MESSAGE(), GETDATE());
            SET @DTLS_DISBURSEMENT_KEY = 0;
        END
    END CATCH

    RETURN ISNULL(@HEAD_DISBURSEMENT_KEY, 0);
END


























--CREATE TABLE #TempEmpDisbursedType (
--    [Key] [int] NULL,
--    [Value] [decimal](9, 2) NULL,
--    [NetAmnt] [decimal](9, 2) NULL
--);

---- Insert values into the temporary table
--INSERT INTO #TempEmpDisbursedType ([Key], [Value], [NetAmnt])
--VALUES
--    (1, 100.00, 90.00),
--    (2, 200.00, 180.00),
--    (3, 300.00, 270.00);



--	DECLARE @jsonData NVARCHAR(MAX);
--            SET @jsonData = (SELECT [Key], [Value], [NetAmnt] FROM #TempEmpDisbursedType FOR JSON AUTO);
            
--            DECLARE @jsonTable TABLE (EMP_KEY INT, DISBURSE_AMNT DECIMAL(9,2), NetAmnt DECIMAL(9,2));
--            INSERT INTO @jsonTable (EMP_KEY, DISBURSE_AMNT, NetAmnt)
--            SELECT [Key], [Value], NetAmnt
--            FROM OPENJSON(@jsonData)
--            WHERE TRY_CAST([Value] AS DECIMAL(9,2)) IS NOT NULL;



--            INSERT INTO [dbo].[DTLS_DISBURSEMENT]
--                ([TenantID], COMPANY_KEY, [HEAD_DISBURSEMENT_KEY], [HEAD_KEY], [MAST_DISBURSEMENT_TYPE_KEY],
--                 [NET_PAYABLE_AMOUNT], [EMPLOYEE_MASTER_KEY], [DISBURSING_AMOUNT])
--            SELECT
--                2, 1, 2, 1, 1, EMP_KEY, DISBURSE_AMNT, NetAmnt
--            FROM @jsonTable;



--SP_SAVE_DETAILS_DISBURSEMENT 2,1,0,1,1,0,4650.25,0,'295','336','575','01-01-2024 00:00:00','31-01-2024 00:00:00',#TempEmpDisbursedType;

---- Drop the temporary table
--DROP TABLE #TempEmpDisbursedType;



--CREATE TABLE #TempEmpDisbursedType (
--    [Key] [int] NULL,
--    [Value] [decimal](9, 2) NULL,
--    [NetAmnt] [decimal](9, 2) NULL
--);

---- Insert values into the temporary table
--INSERT INTO #TempEmpDisbursedType ([Key], [Value], [NetAmnt])
--VALUES
--    (1, 100.00, 90.00),
--    (2, 200.00, 180.00),
--    (3, 300.00, 270.00);

--DECLARE @jsonData NVARCHAR(MAX);
--SET @jsonData = (SELECT [Key], [Value], [NetAmnt] FROM #TempEmpDisbursedType FOR JSON AUTO);

--DECLARE @jsonTable TABLE (EMP_KEY INT, DISBURSE_AMNT DECIMAL(9,2), NetAmnt DECIMAL(9,2));
--INSERT INTO @jsonTable (EMP_KEY, DISBURSE_AMNT, NetAmnt)
--SELECT [Key], [Value], NetAmnt
--FROM OPENJSON(@jsonData)
--WITH (
--    [Key] INT '$."Key"',
--    [Value] DECIMAL(9,2) '$."Value"',
--    NetAmnt DECIMAL(9,2) '$."NetAmnt"'
--);

--INSERT INTO [dbo].[DTLS_DISBURSEMENT]
--    ([TenantID], COMPANY_KEY, [HEAD_DISBURSEMENT_KEY], [HEAD_KEY], [MAST_DISBURSEMENT_TYPE_KEY],
--     [NET_PAYABLE_AMOUNT], [EMPLOYEE_MASTER_KEY], [DISBURSING_AMOUNT])
--SELECT
--    2, 1, 2, 1, 1, EMP_KEY, DISBURSE_AMNT, NetAmnt
--FROM @jsonTable;

--DROP TABLE #TempEmpDisbursedType;























--ALTER PROCEDURE [dbo].[SP_SAVE_DETAILS_DISBURSEMENT]
	
--								   @TenantID INT
--								  ,@COMPANY_KEY INT
--								  ,@HEAD_DISBURSEMENT_KEY	INT 
--								 -- ,@EMPLOYEE_MASTER_KEY	INT
--								  ,@HEAD_KEY	INT
--								  ,@MAST_DISBURSEMENT_TYPE_KEY	INT
--								  ,@DTLS_DISBURSEMENT_KEY	INT
--								--  ,@DTLS_KEY INT
--								--  ,@PAY_TYPE_KEY INT
--								  ,@NET_PAYABLE_AMOUNT DECIMAL(9,2)
--								  ,@DISBURSING_AMOUNT DECIMAL(9,2),
--								   @COSTCENTER_KEY VARCHAR(MAX),
--	  							   @DIVISION_KEY VARCHAR(MAX),
--								   @WAREHOUSE_KEY VARCHAR(MAX),

--								   @USER_KEY	INT,

--								   @FROM_DATE VARCHAR(20), 
--								   @TO_DATE VARCHAR(20), 

--								   @EMP_AMOUNT EmpDisbursedType READONLY
								   
--								   --@EMP_KEYS VARCHAR(MAX),
--								   --@DISBURSE_AMNT VARCHAR(MAX)
--AS
--BEGIN
--	-- SET NOCOUNT ON added to prevent extra result sets from
--	-- interfering with SELECT statements.
--	SET NOCOUNT ON;

--	BEGIN TRY
--	BEGIN TRANSACTION 
--	BEGIN 
	

--    DECLARE @vHEAD_DISBURSEMENT_KEY INT
--	DECLARE @DtlssubStatutoryHeaderKey INT



--					IF( @DTLS_DISBURSEMENT_KEY=0)
--					BEGIN
						

--					DECLARE @jsonData NVARCHAR(MAX);

--					SET @jsonData = (SELECT [Key],[Value],NetAmnt FROM @EMP_AMOUNT FOR JSON AUTO);
				
--					DECLARE @jsonTable TABLE (EMP_KEY INT, DISBURSE_AMNT DECIMAL(9,2), NetAmnt DECIMAL(9,2));

--					INSERT INTO @jsonTable (EMP_KEY, DISBURSE_AMNT, NetAmnt)
--					SELECT *
					
--					FROM OPENJSON(@jsonData)
--					WHERE TRY_CAST([Value] AS DECIMAL(9,2)) IS NOT NULL;
				
--				-- ============
				
--				IF NOT EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND SEND_APPROVAL=1)
--					BEGIN	
--					IF (@HEAD_DISBURSEMENT_KEY=0)
--						BEGIN

--						SELECT @HEAD_DISBURSEMENT_KEY = ISNULL(MAX(HEAD_DISBURSEMENT_KEY), 0) + 1 FROM [HEAD_DISBURSEMENT];
						
--						-- === INSERTION/UPDATION  INTO HEAD
--							INSERT INTO [dbo].[HEAD_DISBURSEMENT]
--							   ([TenantID]
--							   ,[DISBURSEMENT_HEADING]
--							   ,[DISBURSEMENT_REFNO]
--							   ,[DISBURSEMENT_REF_DATE]
--							   ,[DISBURSEMENT_REMARKS]
							   
--							   ,[ENT_DATE]
							   
--							   ,[ENT_USER_KEY]
--							   ,TAG_DELETE

--							   ,FROM_DT_DISBURSE_TYPE
--							   ,TO_DT_DISBURSE_TYPE

--							   ,MAST_DISBURSEMENT_TYPE_KEY
							   
--							   )
--						 VALUES
--							   (
--								    @TenantID
--								   ,'ADD YOUR HEADING'
--								   ,'TS/DISBURSE-A/23-24/1'
--								   , GETDATE()
--								   ,'ADD YOUR REMARKS'
--								   ,GETDATE()
--								   ,@USER_KEY
--								   , 0
--								   , @FROM_DATE , 
--									 @TO_DATE ,
								
--									@MAST_DISBURSEMENT_TYPE_KEY
--							   )

--						END
--					END
--					--========= 
					

--					-- ======  INSERTION INTO DTLS
--						INSERT INTO [dbo].[DTLS_DISBURSEMENT]
--								   ([TenantID]
--								    ,COMPANY_KEY
--								   ,[HEAD_DISBURSEMENT_KEY]
								   
--								   ,[HEAD_KEY]
--								   ,[MAST_DISBURSEMENT_TYPE_KEY]
								   
--						--		   ,[DTLS_KEY]
--						--		   ,[PAY_TYPE_KEY]
--								   ,[NET_PAYABLE_AMOUNT]

--								   ,[EMPLOYEE_MASTER_KEY]
--								   ,[DISBURSING_AMOUNT])
--							 SELECT
								   
--								   @TenantID
--								   ,@COMPANY_KEY
--								  ,@HEAD_DISBURSEMENT_KEY
								  
--								  ,@HEAD_KEY
--								  ,@MAST_DISBURSEMENT_TYPE_KEY
								  
--						--		  ,@DTLS_KEY
--						--		  ,@PAY_TYPE_KEY
--								 -- ,@NET_PAYABLE_AMOUNT
--								 ,*
								  
								
--							FROM  @jsonTable;
						
--						 EXEC SP_SAVE_COSTCENTER_DIVISION_DISBURSEMENT_BOOKING @COSTCENTER_KEY,@DIVISION_KEY,@WAREHOUSE_KEY,0, @HEAD_DISBURSEMENT_KEY,@HEAD_KEY,@MAST_DISBURSEMENT_TYPE_KEY,@TenantID
--					END
					
--						ELSE 
--							BEGIN
--							UPDATE [DTLS_DISBURSEMENT] 
--							SET
--							   NET_PAYABLE_AMOUNT=@NET_PAYABLE_AMOUNT
--							  ,DISBURSING_AMOUNT=@DISBURSING_AMOUNT
--							 WHERE
--								DTLS_DISBURSEMENT_KEY=@DTLS_DISBURSEMENT_KEY;

--							--UPDATE [MAST_STATUTORY_LIMIT_SETUP_SUB_STAT_MAP] 
--							--SET
--							--		UpperLimit=@UpperLimit
--							--	   ,LowerLimit=@LowerLimit
--							--WHERE DtlsStatutoryHeaderKey=@DtlsStatutoryHeaderKey
--						END
		
		
--END

--   		IF @@TRANCOUNT > 0
--			BEGIN
--				COMMIT TRAN 
--				--RETURN SELECT @DTLS_DISBURSEMENT_KEY=SCOPE_IDENTITY() FROM DTLS_DISBURSEMENT; 
--			END
	
--	END TRY
--		BEGIN CATCH
--			IF @@ERROR<>0  
--			BEGIN
--				ROLLBACK  TRAN
--				INSERT INTO tblErrorMessage(spName, errorMessage, systemDate) 
--				VALUES ('[SP_SAVE_DETAILS_DISBURSEMENT]', ERROR_MESSAGE(), GETDATE())
--				SET @DTLS_DISBURSEMENT_KEY=0
--			END
--		END CATCH
	
--		RETURN ISNULL(@HEAD_DISBURSEMENT_KEY,0)
--END


--==============
USE [DB_PAYROLL_TC_BETA]
GO
/****** Object:  StoredProcedure [dbo].[SP_GET_HEAD_DISBURSEMENT]    Script Date: 08-05-2024 19:36:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
  
-- SP_GET_HEAD_DISBURSEMENT 'SubDivision_Bonus_1',1
-- SP_GET_HEAD_DISBURSEMENT 'SubDivision_Advance_0',1
  
ALTER PROCEDURE [dbo].[SP_GET_HEAD_DISBURSEMENT]  
  
@REC_TYPE VARCHAR(40) ,  
@ID INT OUTPUT  
AS  
BEGIN  
 -- SET NOCOUNT ON added to prevent extra result sets from  
 -- interfering with SELECT statements.  
 SET NOCOUNT ON;  
 IF(@REC_TYPE='Head_Disburse_All')  
  BEGIN  
    SELECT DISTINCT HD.HEAD_DISBURSEMENT_KEY ,DISBURSEMENT_HEADING ,DISBURSEMENT_REFNO ,DD.HEAD_KEY,ISNULL(COMPLETE_FLAG,0) AS COMPLETE_FLAG,
	ISNULL(SEND_APPROVAL,0) AS SEND_APPROVAL,CONVERT(VARCHAR, CONVERT(DATETIME, DISBURSEMENT_REF_DATE, 103), 103) AS DISBURSEMENT_REF_DATE  
   ,DISBURSEMENT_REMARKS , MDT.MAST_DISBURSEMENT_TYPE_KEY,MDT.DISBURSEMENT_TYPE  
    FROM HEAD_DISBURSEMENT HD,MAST_DISBURSEMENT_TYPE MDT,   DTLS_DISBURSEMENT DD  
    WHERE HD.MAST_DISBURSEMENT_TYPE_KEY=MDT.MAST_DISBURSEMENT_TYPE_KEY AND MDT.TAG_ACTIVE=1 --AND DD.HEAD_KEY IN  
    --(SELECT DISTINCT(HEAD_KEY) FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY=HD.HEAD_DISBURSEMENT_KEY GROUP BY HEAD_KEY)  
    AND HD.HEAD_DISBURSEMENT_KEY=DD.HEAD_DISBURSEMENT_KEY --AND MDT.TAG_ACTIVE=1  
  END    
 IF(@REC_TYPE='Type')  
  BEGIN   
   IF(@ID IS NOT NULL AND @ID <>0 AND @ID <>'')  
    BEGIN  
        
    SELECT DISTINCT MDT.[MAST_DISBURSEMENT_TYPE_KEY]  
       ,MDT.[DISBURSEMENT_TYPE]  
        
     FROM [dbo].[MAST_DISBURSEMENT_TYPE] MDT ,DTLS_DISBURSEMENT DD  
     WHERE MDT.MAST_DISBURSEMENT_TYPE_KEY=DD.MAST_DISBURSEMENT_TYPE_KEY AND MDT.TAG_ACTIVE=1 AND DD.MAST_DISBURSEMENT_TYPE_KEY=@ID  
    END  
   ELSE  
    BEGIN  
     SELECT MDT.[MAST_DISBURSEMENT_TYPE_KEY]  
       ,MDT.[DISBURSEMENT_TYPE]  
        
     FROM [dbo].[MAST_DISBURSEMENT_TYPE] MDT   
     WHERE  MDT.TAG_ACTIVE=1  
    END  
     
  END  
   
 -- ===========  
 IF(@REC_TYPE='HeadType')  
  BEGIN  
   IF(@ID=1) -- SALARY  
   BEGIN  
   SELECT HEAD_SALARY_KEY AS 'HEAD_KEY', SALARY_REFNO AS 'HEAD_REFNO' FROM HEAD_SALARY  
   WHERE  TAG_DELETE IS NULL AND HEAD_SALARY_KEY NOT IN 
	   (SELECT DISBURSEMENT_TYPE_HEAD_KEY FROM HEAD_DISBURSEMENT WHERE MAST_DISBURSEMENT_TYPE_KEY=1)
   --AND SALARY_MONTH_KEY >=4 AND SALARY_YEAR=2023 OR (SALARY_YEAR=2024 AND SALARY_MONTH_KEY <4)   
     
   END  
  
   IF(@ID=2) -- CLAIM  
   BEGIN  
   SELECT MAST_HRD_PERSONNEL_CLAIM_KEY AS 'HEAD_KEY', CLAIM_REF_NO AS 'HEAD_REFNO'  FROM MAST_HRD_PERSONNEL_CLAIM,Employee_Subdivision_Map  
   WHERE  TAG_DELETE IS NULL OR TAG_DELETE<>1   
   END  
 
   IF(@ID=3) -- ADVANCE  
   BEGIN  
   
   SELECT MAST_HRD_ADVANCE_APPLICATION_KEY AS 'HEAD_KEY', ADVANCE_APPICATION_REF_NO AS 'HEAD_REFNO' FROM MAST_HRD_ADVANCE_APPLICATION  
   WHERE  TAG_DELETE IS NULL OR TAG_DELETE<>1   
   --SELECT HEAD_HRD_ADVANCE_KEY AS 'HEAD_KEY', ADVANCE_REF_NO AS 'HEAD_REFNO' FROM HEAD_HRD_ADVANCE  
   --WHERE  TAG_DELETE IS NULL OR TAG_DELETE<>1   
   END  
  
   IF(@ID=4) -- BONUS  
   BEGIN  
   SELECT HEAD_BONUS_KEY AS 'HEAD_KEY',BONUS_REFNO AS 'HEAD_REFNO' FROM HEAD_BONUS  
   WHERE  TAG_DELETE IS NULL OR TAG_DELETE=0 AND HEAD_BONUS_KEY NOT IN 
	   (SELECT DISBURSEMENT_TYPE_HEAD_KEY FROM HEAD_DISBURSEMENT WHERE MAST_DISBURSEMENT_TYPE_KEY=4)
   -- TAG_DELETE<>1 --AND SALARY_MONTH_KEY >=4 AND SALARY_YEAR=2023 OR (SALARY_YEAR=2024 AND SALARY_MONTH_KEY <4)   
   END  
     
  END  
  
  
  IF(@REC_TYPE='Claim')  
  BEGIN  
	   SELECT DISTINCT MAST_HRD_PERSONNEL_CLAIM_KEY AS 'HEAD_KEY', CLAIM_REF_NO AS 'HEAD_REFNO'  FROM MAST_HRD_PERSONNEL_CLAIM --,Employee_Subdivision_Map  
	   WHERE  TAG_DELETE IS NULL OR TAG_DELETE<>1 AND MAST_HRD_PERSONNEL_CLAIM_KEY NOT IN 
	   (SELECT DISBURSEMENT_TYPE_HEAD_KEY FROM HEAD_DISBURSEMENT WHERE MAST_DISBURSEMENT_TYPE_KEY=2)
  END
  IF(@REC_TYPE='Advance')  
  BEGIN  
	 SELECT MAST_HRD_ADVANCE_APPLICATION_KEY AS 'HEAD_KEY', ADVANCE_APPICATION_REF_NO AS 'HEAD_REFNO' FROM MAST_HRD_ADVANCE_APPLICATION  
	 WHERE  TAG_DELETE IS NULL OR TAG_DELETE<>1  AND MAST_HRD_ADVANCE_APPLICATION_KEY NOT IN 
	   (SELECT DISBURSEMENT_TYPE_HEAD_KEY FROM HEAD_DISBURSEMENT WHERE MAST_DISBURSEMENT_TYPE_KEY=3)
  END


 IF(@REC_TYPE='HeadSal')  
  BEGIN  
  
   SELECT HEAD_SALARY_KEY AS 'HEAD_KEY', SALARY_REFNO AS 'HEAD_REFNO' FROM HEAD_SALARY  
   WHERE HEAD_SALARY_KEY=@ID --AND TAG_DELETE IS NULL   
  END  
    
 IF(@REC_TYPE='HeadClaim')  
  BEGIN  
  SELECT  MAST_HRD_PERSONNEL_CLAIM_KEY AS 'HEAD_KEY', CLAIM_REF_NO AS 'HEAD_REFNO'  FROM MAST_HRD_PERSONNEL_CLAIM  
  WHERE MAST_HRD_PERSONNEL_CLAIM_KEY=@ID --AND  TAG_DELETE<>1   
     
  END  
  
  IF(@REC_TYPE='HeadAdvance')  
  BEGIN  
  SELECT MAST_HRD_ADVANCE_APPLICATION_KEY AS 'HEAD_KEY', ADVANCE_APPICATION_REF_NO AS 'HEAD_REFNO' FROM MAST_HRD_ADVANCE_APPLICATION  
	 WHERE  MAST_HRD_ADVANCE_APPLICATION_KEY=@ID--TAG_DELETE IS NULL OR TAG_DELETE<>1 

   --SELECT HEAD_HRD_ADVANCE_KEY AS 'HEAD_KEY', ADVANCE_REF_NO AS 'HEAD_REFNO' FROM HEAD_HRD_ADVANCE  
   --WHERE HEAD_HRD_ADVANCE_KEY=@ID --AND TAG_DELETE<>1   
      
  END  
 IF(@REC_TYPE='HeadBonus')  
  BEGIN  
    
   SELECT HEAD_BONUS_KEY AS 'HEAD_KEY',BONUS_REFNO AS 'HEAD_REFNO' FROM HEAD_BONUS  
   WHERE HEAD_BONUS_KEY=@ID --AND  TAG_DELETE<>1  
     
  END  
  
  
  
 -- ===========  
 IF (SUBSTRING(@REC_TYPE,0,19) = 'SubDivision_Salary')  
 BEGIN  
  IF NOT EXISTS(SELECT * FROM HEAD_DISBURSEMENT_SUBDIVISION WHERE HEAD_DISBURSEMENT_KEY=ISNULL(CAST(SUBSTRING(@REC_TYPE,20,5) AS INT),0))  
  BEGIN  
   SELECT HSS.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,  
   CONVERT(VARCHAR(10),CONVERT(DATETIME,HS.SALARY_FROM_DATE,105),23) AS 'FR_DT' ,  
   CONVERT(VARCHAR(10),CONVERT(DATETIME,HS.SALARY_TO_DATE,105),23) AS 'TO_DT'  
   FROM HEAD_SALARY_SUBDIVISION HSS, CompanySubDivisionProfile CSP ,HEAD_SALARY HS  
   WHERE HSS.SubDivisionId=CSP.SubDivisionId AND HSS.HEAD_SALARY_KEY=@ID AND HSS.HEAD_SALARY_KEY=HS.HEAD_SALARY_KEY  
   AND CSP.ActiveFlag=1 ORDER BY CSP.LabelKey  
  END  
  ELSE  
   BEGIN  
    SELECT HDS.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,  
    CONVERT(VARCHAR(10),CONVERT(DATETIME, HS.SALARY_FROM_DATE,105),23) AS 'FR_DT' ,  
    CONVERT(VARCHAR(10),CONVERT(DATETIME,HS.SALARY_TO_DATE,105),23) AS 'TO_DT'  
    FROM HEAD_DISBURSEMENT_SUBDIVISION HDS, CompanySubDivisionProfile CSP ,HEAD_SALARY HS  
    WHERE HDS.SubDivisionId=CSP.SubDivisionId AND HDS.HEAD_DISBURSEMENT_KEY=CAST(SUBSTRING(@REC_TYPE,20,5) AS INT)   
    AND HDS.HEAD_KEY=HS.HEAD_SALARY_KEY AND HDS.DISBURSEMENT_TYPE=1 AND CSP.ActiveFlag=1 ORDER BY CSP.LabelKey   
   END  
    
 END  
 IF (SUBSTRING(@REC_TYPE,0,18) = 'SubDivision_Claim') --(@REC_TYPE = 'SubDivision_Claim')  
 BEGIN  
   IF NOT EXISTS(SELECT * FROM HEAD_DISBURSEMENT_SUBDIVISION WHERE HEAD_DISBURSEMENT_KEY=ISNULL(CAST(SUBSTRING(@REC_TYPE,19,5) AS INT),0))  
   BEGIN  
   SELECT CSP.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,  
   CONVERT(VARCHAR(10),CONVERT(DATETIME,MHPC.FROM_DATE,105),23) AS 'FR_DT',  
   CONVERT(VARCHAR(10),CONVERT(DATETIME,MHPC.TO_DATE,105),23) AS 'TO_DT' FROM MAST_HRD_PERSONNEL_CLAIM MHPC  
   LEFT JOIN Employee_Subdivision_Map ESM ON   
   ESM.EMPLOYEE_MASTER_KEY =MHPC.EMPLOYEE_MASTER_KEY
   LEFT JOIN EMPLOYEE_SUBDIVISION_MAP_DTLS ESMD ON   
   ESMD.Employee_Subdivision_Map_Key =ESM.Employee_Subdivision_Map_Key
   LEFT JOIN CompanySubDivisionProfile CSP ON CSP.SubDivisionId=ESMD.SubDivisionId
   --LEFT JOIN Employee_Subdivision_Map ESM ON ESM.Employee_Subdivision_Map_Key = MHPC.Employee_Subdivision_Map_Key_COSTCENTER  
   --LEFT JOIN CompanySubDivisionProfile CSP ON CSP.SubDivisionId=ESM.Employee_Subdivision_Map_Key  
     
   WHERE  MHPC.TAG_DELETE<>1  AND MHPC.MAST_HRD_PERSONNEL_CLAIM_KEY=@ID 
   ORDER BY CSP.LabelKey  
  END  
  ELSE  
   BEGIN  
    SELECT HDS.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,  
    CONVERT(VARCHAR(10),CONVERT(DATETIME,MHPC.FROM_DATE,105),23) AS 'FR_DT',  
    CONVERT(VARCHAR(10),CONVERT(DATETIME,MHPC.TO_DATE,105),23)  
    AS 'TO_DT' FROM HEAD_DISBURSEMENT_SUBDIVISION HDS, CompanySubDivisionProfile CSP  
    , MAST_HRD_PERSONNEL_CLAIM MHPC  
    WHERE HDS.SubDivisionId=CSP.SubDivisionId AND HDS.HEAD_DISBURSEMENT_KEY=CAST(SUBSTRING(@REC_TYPE,19,5) AS INT)  
    AND MHPC.MAST_HRD_PERSONNEL_CLAIM_KEY =HDS.HEAD_KEY  
    AND CSP.ActiveFlag=1 ORDER BY CSP.LabelKey  
   END  
  END  
  
  --IF (@ID = 2)  
  --BEGIN  
  -- SELECT *  
  -- FROM MAST_HRD_PERSONNEL_CLAIM  
  -- WHERE TAG_DELETE <> 1  
       
  --END  
  IF (SUBSTRING(@REC_TYPE,0,20) = 'SubDivision_Advance')   
 BEGIN  
  --IF (@ID = 3)  
  --BEGIN  
  -- SELECT *  
  -- FROM HEAD_HRD_ADVANCE  
  -- WHERE TAG_DELETE <> 1  
      
  --END  
  
  IF NOT EXISTS(SELECT * FROM HEAD_DISBURSEMENT_SUBDIVISION WHERE HEAD_DISBURSEMENT_KEY=ISNULL(CAST(SUBSTRING(@REC_TYPE,21,5) AS INT),0))  
   BEGIN  
   SELECT CSP.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,  
   CONVERT(VARCHAR(10),CONVERT(DATETIME,MHAA.ADVANCE_REFUND_STARTDATE,105),23) AS 'FR_DT',  
   CONVERT(VARCHAR(10),CONVERT(DATETIME,MHAA.ADVANCE_REFUND_ENDDATE,105),23) AS 'TO_DT'  
   FROM MAST_HRD_ADVANCE_APPLICATION MHAA LEFT JOIN Employee_Subdivision_Map ESM ON   
   ESM.EMPLOYEE_MASTER_KEY =MHAA.EMPLOYEE_MASTER_KEY
   LEFT JOIN EMPLOYEE_SUBDIVISION_MAP_DTLS ESMD ON   
   ESMD.Employee_Subdivision_Map_Key =ESM.Employee_Subdivision_Map_Key
   LEFT JOIN CompanySubDivisionProfile CSP ON CSP.SubDivisionId=ESMD.SubDivisionId
     
   WHERE   MHAA.TAG_DELETE<>1  AND MHAA.MAST_HRD_ADVANCE_APPLICATION_KEY=@ID 
   ORDER BY CSP.LabelKey  
  END  
  ELSE  
   BEGIN  
    SELECT HDS.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,CONVERT(VARCHAR(10),CONVERT(DATETIME,MHAA.ADVANCE_REFUND_STARTDATE,105),23)  
    AS 'FR_DT',  
    CONVERT(VARCHAR(10),CONVERT(DATETIME,MHAA.ADVANCE_REFUND_ENDDATE,105),23) AS 'TO_DT'  
    FROM HEAD_DISBURSEMENT_SUBDIVISION HDS, CompanySubDivisionProfile CSP , MAST_HRD_ADVANCE_APPLICATION MHAA  
    WHERE HDS.SubDivisionId=CSP.SubDivisionId AND HDS.HEAD_DISBURSEMENT_KEY=CAST(SUBSTRING(@REC_TYPE,21,5) AS INT)  
    AND MHAA.MAST_HRD_ADVANCE_APPLICATION_KEY =HDS.HEAD_KEY --AND HDS.HEAD_KEY=@ID  
    AND CSP.ActiveFlag=1 ORDER BY CSP.LabelKey  
   END  
 END  
   
  IF (SUBSTRING(@REC_TYPE,0,18) = 'SubDivision_Bonus')   
  BEGIN  
  --IF (@ID = 4)  
  --BEGIN  
  -- SELECT *  
  -- FROM HEAD_SALARY  
  -- WHERE TAG_DELETE <> 1  
  --    AND SALARY_MONTH_KEY >= 4  
  --    AND SALARY_YEAR = 2023 OR (SALARY_YEAR = 2024 AND SALARY_MONTH_KEY < 4)  
  --END  
  
   IF NOT EXISTS(SELECT * FROM HEAD_DISBURSEMENT_SUBDIVISION WHERE HEAD_DISBURSEMENT_KEY=ISNULL(CAST(SUBSTRING(@REC_TYPE,19,5) AS INT),0))  
   BEGIN  
   --PRINT 'BONUS1'  
   SELECT CSP.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,CONVERT(VARCHAR(10),CONVERT(DATETIME, HB.BONUS_FROM_DATE, 105),23) AS 'FR_DT',  
   CONVERT(VARCHAR(10),CONVERT(DATETIME, HB.BONUS_TO_DATE, 105),23) AS 'TO_DT' FROM HEAD_BONUS HB  
   LEFT JOIN HEAD_BONUS_SubDivision HBS ON HBS.HEAD_BONUS_KEY =HB.HEAD_BONUS_KEY  
   LEFT JOIN CompanySubDivisionProfile CSP ON CSP.SubDivisionId=HBS.SubDivisionId  
     
   WHERE   HBS.HEAD_BONUS_KEY=@ID --AND HB.TAG_DELETE<>1  
   ORDER BY CSP.LabelKey  
  END  
  ELSE  
   BEGIN  
   --PRINT 'BONUS2'  
    SELECT HDS.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,CONVERT(VARCHAR(10),CONVERT(DATETIME,HB.BONUS_FROM_DATE,105),23) AS 'FR_DT',  
    CONVERT(VARCHAR(10),CONVERT(DATETIME,HB.BONUS_TO_DATE,105),23) AS 'TO_DT'   
    FROM HEAD_DISBURSEMENT_SUBDIVISION HDS, CompanySubDivisionProfile CSP , HEAD_BONUS HB  
    WHERE HDS.SubDivisionId=CSP.SubDivisionId AND HDS.HEAD_DISBURSEMENT_KEY=CAST(SUBSTRING(@REC_TYPE,19,5) AS INT)  
    AND HB.HEAD_BONUS_KEY =HDS.HEAD_KEY AND HDS.HEAD_KEY=@ID  -- HDS.DISBURSEMENT_TYPE=@ID 
    AND CSP.ActiveFlag=1 ORDER BY CSP.LabelKey  
   END  
 END  
  
 IF(@REC_TYPE='SEND_APPROVAL')  
  BEGIN 
  
   IF EXISTS (SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @ID AND LATEST_FLAG=1 )  
    BEGIN  
     UPDATE DTLS_DISBURSEMENT  
     SET APPROVAL_TAG=1  
     WHERE HEAD_DISBURSEMENT_KEY = @ID  AND LATEST_FLAG=1
     SET @ID = 1 -- Success  
	 RETURN @ID
    END  
   ELSE  
     BEGIN  
     SET @ID = 0 -- Record not found or flag is not 1  
	 RETURN @ID
    END  
	 
	-- DECLARE @BALANCE_AMMOUNT DECIMAL(9,3)
	-- DECLARE @DISBURSING_AMOUNT DECIMAL(9,3)
	-- DECLARE @NET_PAYABLE_AMOUNT DECIMAL(9,3)
	
	--IF EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY=@ID AND COMPLETE_FLAG <>1)
	--BEGIN
	--	--====== COMPLETION TAG
	--					SELECT  @DISBURSING_AMOUNT=SUM(DD.DISBURSING_AMOUNT),@NET_PAYABLE_AMOUNT=SUM(DD.NET_PAYABLE_AMOUNT) 
							
	--						FROM DTLS_DISBURSEMENT DD 
	--						WHERE DD.HEAD_DISBURSEMENT_KEY=@ID AND DD.LATEST_FLAG=1 AND DD.APPROVAL_TAG=1
														
	--						SET @BALANCE_AMMOUNT=@NET_PAYABLE_AMOUNT- @DISBURSING_AMOUNT
							
	--						IF(@BALANCE_AMMOUNT=0)
	--							BEGIN
	--								UPDATE [HEAD_DISBURSEMENT]
	--								SET COMPLETE_FLAG=1
	--								WHERE HEAD_DISBURSEMENT_KEY = @ID
	--							END
	--					-- =========		 
	--END
  -- IF EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @ID AND COMPLETE_FLAG=1 )  
  --  BEGIN  
  --   UPDATE HEAD_DISBURSEMENT  
  --   SET SEND_APPROVAL=1  
  --   WHERE HEAD_DISBURSEMENT_KEY = @ID  
  --   SET @ID = 1 -- Success  
	 --RETURN @ID
  --  END  
  -- ELSE  
  --   BEGIN  
  --   SET @ID = 0 -- Record not found or flag is not 1  
	 --RETURN @ID
  --  END  
  
  END    
  
END  
  
-- SP_GET_HEAD_DISBURSEMENT 'SEND_APPROVAL',1  
  
--  SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = 1 AND COMPLETE_FLAG=1  
  
--select * from MAST_DISBURSEMENT_TYPE  SP_GET_HEAD_DISBURSEMENT 'SubDivision_Salary_3',1  
 --SELECT HSS.SubDivisionId,CSP.SubDivisionName,CSP.LabelKey FROM HEAD_SALARY_SUBDIVISION HSS, CompanySubDivisionProfile CSP  
 -- WHERE HSS.HEAD_SALARY_KEY=@ID AND CSP.ActiveFlag=1 ORDER BY CSP.LabelKey  
  
 -- SELECT HSS.SubDivisionId,CSP.SubDivisionName FROM HEAD_SALARY_SUBDIVISION HSS, CompanySubDivisionProfile CSP  
 -- WHERE HSS.HEAD_SALARY_KEY=1 AND HSS.SubDivisionId  
   
  
  --DECLARE @REC_TYPE VARCHAR(30)  
  --SET @REC_TYPE = 'SubDivision_Claim_2'  
  ----SET @REC_TYPE = 'Head'  
  ----print SUBSTRING(@REC_TYPE,20,5)  
  --print SUBSTRING(@REC_TYPE,0,18)  
  --print SUBSTRING(@REC_TYPE,19,3)  
    
  -- IF NOT EXISTS(SELECT * FROM HEAD_DISBURSEMENT_SUBDIVISION WHERE HEAD_DISBURSEMENT_KEY=CAST(SUBSTRING(@REC_TYPE,19,5) AS INT))  
  -- BEGIN  
  --  PRINT 'NOT EXISTS'  
  --   PRINT SUBSTRING(@REC_TYPE,18,5)  
  -- END  
  -- ELSE   
  -- BEGIN  
  --  PRINT CAST(SUBSTRING(@REC_TYPE,19,5) AS INT)  
  --  PRINT 'EXISTS'  
  -- END  
  -- IF NOT EXISTS(SELECT * FROM HEAD_DISBURSEMENT_SUBDIVISION WHERE HEAD_DISBURSEMENT_KEY=1)  
  -- BEGIN  
  --  PRINT 'NOT EXISTS'  
  -- END  
  -- ELSE  
  -- BEGIN  
  --  PRINT 'EXISTS'  
  -- END  
 --   SP_GET_HEAD_DISBURSEMENT 'SubDivision_Bonus_1',1  
  
-- FR_DT  
--2024-01-01 00:00:00  
  
-- SP_GET_HEAD_DISBURSEMENT 'HeadBonus',1  
  
  --select * from  MAST_HRD_ADVANCE_APPLICATION
  --select * from  Employee_Subdivision_Map where EMPLOYEE_MASTER_KEY=1729
  --select * from  CompanySubDivisionProfile

  --    SELECT CSP.SubDivisionId,CSP.SubDivisionName,ISNULL(CSP.LabelKey,0) AS LabelKey,  
  -- CONVERT(VARCHAR(10),CONVERT(DATETIME,MHAA.ADVANCE_REFUND_STARTDATE,105),23) AS 'FR_DT',  
  -- CONVERT(VARCHAR(10),CONVERT(DATETIME,MHAA.ADVANCE_REFUND_ENDDATE,105),23) AS 'TO_DT'  
  -- FROM MAST_HRD_ADVANCE_APPLICATION MHAA LEFT JOIN Employee_Subdivision_Map ESM ON   
  -- ESM.EMPLOYEE_MASTER_KEY =MHAA.EMPLOYEE_MASTER_KEY
  -- LEFT JOIN EMPLOYEE_SUBDIVISION_MAP_DTLS ESMD ON   
  -- ESMD.Employee_Subdivision_Map_Key =ESM.Employee_Subdivision_Map_Key
  -- LEFT JOIN CompanySubDivisionProfile CSP ON CSP.SubDivisionId=ESMD.SubDivisionId


USE [DB_PAYROLL_TC_BETA]
GO
/****** Object:  StoredProcedure [dbo].[SP_SAVE_HEAD_DISBURSEMENT]    Script Date: 08-05-2024 19:37:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Disbursement
-- Create date: 02/05/2024 (Re-Create)
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[SP_SAVE_HEAD_DISBURSEMENT]
	-- Add the parameters for the stored procedure here
	@HEAD_DISBURSEMENT_KEY INT,
	@DISBURSEMENT_HEADING VARCHAR(150),
	@DISBURSEMENT_REFNO VARCHAR(150),
	@DISBURSEMENT_REMARKS VARCHAR(350)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	  BEGIN TRY

	   BEGIN TRANSACTION;


					UPDATE [dbo].[HEAD_DISBURSEMENT]
				   SET 
					  [DISBURSEMENT_HEADING] = @DISBURSEMENT_HEADING,
					  [DISBURSEMENT_REFNO] =   @DISBURSEMENT_REFNO
      
					 ,[DISBURSEMENT_REMARKS] = @DISBURSEMENT_REMARKS
      
				 WHERE HEAD_DISBURSEMENT_KEY=  @HEAD_DISBURSEMENT_KEY
				--
				
        IF @@TRANCOUNT > 0 
			     BEGIN
				      COMMIT TRANSACTION;
					  RETURN ISNULL(@HEAD_DISBURSEMENT_KEY, 0);
				 END
      END TRY

	      BEGIN CATCH
			     IF @@ERROR <> 0
				     BEGIN
					      ROLLBACK TRANSACTION;
						      INSERT INTO tblErrorMessage(spName,errorMessage,systemDate)
					     VALUES('SP_SAVE_HEAD_DISBURSEMENT',ERROR_MESSAGE(),GETDATE());
					      SET @HEAD_DISBURSEMENT_KEY = 0;
					 END

          END CATCH

		RETURN 0;

   END

		

USE [DB_PAYROLL_TC_BETA]
GO
/****** Object:  StoredProcedure [dbo].[SP_GET_DISBURSEMENT_DETAILS1]    Script Date: 08-05-2024 19:37:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- SP_GET_DISBURSEMENT_DETAILS1 4,'DETAILS','575','01-01-2024 00:00:00','31-01-2024 00:00:00',1,null,'336',1 
-- SP_GET_DISBURSEMENT_DETAILS1 3,'DETAILS','575','01-05-2024 00:00:00','31-12-2024 00:00:00',1,null,'336',1
-- SP_GET_DISBURSEMENT_DETAILS1 1,'DETAILS','567','01-03-2024 00:00:00','31-03-2024 00:00:00',1,null,'302,303,409',1

--SP_GET_DISBURSEMENT_DETAILS1 1,'DETAILS','575','','',1,'','336',1
ALTER PROCEDURE [dbo].[SP_GET_DISBURSEMENT_DETAILS1] 
	-- Add the parameters for the stored procedure here
	@MAST_DISBURSEMENT_TYPE_KEY INT, 
	@GET_REC_TYPE VARCHAR(25),
	@WAREIDS VARCHAR(MAX),
	@FROM_DATE VARCHAR(20), 
	@TO_DATE VARCHAR(20), 
	@HEAD_KEY INT,
	@HEAD_DISBURSEMENT_KEY INT,
	@DIVISION_KEYS VARCHAR(MAX),
	@COMPANY_KEY INT

AS
BEGIN
	
	SET NOCOUNT ON;
				
				DECLARE @TAB1 TABLE (EMP_KEY INT, DISBURSING_AMNT DECIMAL(9,2));

				DECLARE @CostcenterTable TABLE (CostcenterKey VARCHAR(50));
				DECLARE @DivisionTable TABLE (DivisionKey VARCHAR(50));
				DECLARE @WarehouseTable TABLE (WarehouseKey VARCHAR(50));


				DECLARE @ConvertedFromDate DATETIME = CONVERT(DATETIME, @FROM_DATE, 105);
				DECLARE @ConvertedToDate DATETIME = CONVERT(DATETIME, @TO_DATE, 105);

				DECLARE @NET_PAYABLE_AMOUNT DECIMAL(9,3);
				DECLARE @DISBURSING_AMOUNT DECIMAL(9,3);
				DECLARE @BALANCE_AMOUNT DECIMAL(9,3);
				
								
				INSERT INTO @DivisionTable (DivisionKey)
				SELECT value
				FROM STRING_SPLIT(@DIVISION_KEYS, ',');

				INSERT INTO @WarehouseTable (WarehouseKey)
				SELECT value
				FROM STRING_SPLIT(@WAREIDS, ',');


		IF(@MAST_DISBURSEMENT_TYPE_KEY=1) -- SALARY
		BEGIN
		--INSERT INTO @WarehouseTable (WarehouseKey)
  --      SELECT value
  --      FROM STRING_SPLIT(@WAREHOUSE_KEY, ',');

			IF (@GET_REC_TYPE = 'DETAILS')
			BEGIN

			IF EXISTS (SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY)
					BEGIN

					 IF EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY AND COMPLETE_FLAG=1 )
						BEGIN
							SELECT DISTINCT
				
								EM.Employee_Name,
								EM.EMPLOYEE_MASTER_KEY,
								MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
								NET_SALARY AS 'NET AMOUNT',
								NET_SALARY AS 'DISBURSING_AMOUNT',
								1	AS 'COMPLETE_FLAG'
							FROM
								EMPLOYEE_MASTER EM

							INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
							INNER JOIN MAST_HRD_DRAFT_PERSONNEL_PF_ESI PFESI ON 
							MDP.MAST_HRD_DRAFT_PERSONNEL_KEY = PFESI.MAST_HRD_DRAFT_PERSONNEL_KEY 
							INNER JOIN DTLS_SALARY_HEAD DSH ON MDP.EMPLOYEE_MASTER_KEY=DSH.EMPLOYEE_MASTER_KEY
										WHERE EM.StatusKey = 1	AND DSH.HEAD_SALARY_KEY=@HEAD_KEY
							AND DSH.SALARY_FROM_DATE >=@ConvertedFromDate AND DSH.SALARY_TO_DATE <=@ConvertedToDate
							END
						--SELECT  @DISBURSING_AMOUNT=SUM(DD.DISBURSING_AMOUNT),@NET_PAYABLE_AMOUNT=SUM(DD.NET_PAYABLE_AMOUNT) 
							
						--	FROM DTLS_DISBURSEMENT DD 
						--	WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1

						--	SET @BALANCE_AMOUNT=@NET_PAYABLE_AMOUNT- @DISBURSING_AMOUNT
						
							
						ELSE 
							BEGIN
								INSERT INTO @TAB1

								SELECT EMPLOYEE_MASTER_KEY,DISBURSING_AMOUNT FROM DTLS_DISBURSEMENT DD 
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1
								
							--DECLARE @COUNT INT
							--SELECT @COUNT=COUNT(*) FROM DTLS_DISBURSEMENT DD 
							--WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1
							
							
								SELECT  TB.DISBURSING_AMNT	AS 'NET AMOUNT',
								0 AS 'DISBURSING_AMOUNT',
								0 AS 'COMPLETE_FLAG',
								EM.Employee_Name ,EM.EMPLOYEE_MASTER_KEY
								FROM DTLS_DISBURSEMENT DD ,EMPLOYEE_MASTER EM ,@TAB1 TB
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY
								AND DD.EMPLOYEE_MASTER_KEY=EM.EMPLOYEE_MASTER_KEY AND DD.EMPLOYEE_MASTER_KEY=TB.EMP_KEY
								AND DD.LATEST_FLAG=1
							END

					END
				
				ELSE
					BEGIN
						SELECT DISTINCT
						EM.Employee_Name,
					    EM.EMPLOYEE_MASTER_KEY,
						MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
						0 AS 'DISBURSING_AMOUNT',
						NET_SALARY AS 'NET AMOUNT',
						0	AS 'COMPLETE_FLAG'
					FROM
					EMPLOYEE_MASTER EM
					INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
					INNER JOIN MAST_HRD_DRAFT_PERSONNEL_PF_ESI PFESI ON MDP.MAST_HRD_DRAFT_PERSONNEL_KEY = PFESI.MAST_HRD_DRAFT_PERSONNEL_KEY 
					INNER JOIN DTLS_SALARY_HEAD DSH ON MDP.EMPLOYEE_MASTER_KEY=DSH.EMPLOYEE_MASTER_KEY
				--	AND PFESI.TAG_OLD_NEW = 2
					WHERE EM.StatusKey = 1	AND DSH.HEAD_SALARY_KEY=@HEAD_KEY AND DSH.SALARY_FROM_DATE >=@ConvertedFromDate 
					AND DSH.SALARY_TO_DATE <=@ConvertedToDate
				
					END
			
				
			END
		END		
		IF(@MAST_DISBURSEMENT_TYPE_KEY=2) -- CLAIM
		BEGIN
			IF (@GET_REC_TYPE = 'DETAILS')
			BEGIN

			IF EXISTS (SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY)
					BEGIN

					 IF EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY AND COMPLETE_FLAG=1 )
						BEGIN
							SELECT DISTINCT
				
								EM.Employee_Name,
								EM.EMPLOYEE_MASTER_KEY,
								MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
								AMOUNT AS 'NET AMOUNT',
								AMOUNT AS 'DISBURSING_AMOUNT',
								1	AS 'COMPLETE_FLAG'
							FROM
								EMPLOYEE_MASTER EM

							INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
							INNER JOIN MAST_HRD_PERSONNEL_CLAIM MHPC ON MHPC.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY
					INNER JOIN MAST_HRD_PERSONNEL_CLAIM_DETAILS MHPCD ON MHPCD.MAST_HRD_PERSONNEL_CLAIM_KEY=MHPC.MAST_HRD_PERSONNEL_CLAIM_KEY
						
							WHERE EM.StatusKey = 1	AND MHPC.MAST_HRD_PERSONNEL_CLAIM_KEY=@HEAD_KEY
							AND MHPC.FROM_DATE >=@ConvertedFromDate AND MHPC.TO_DATE <=@ConvertedToDate
							END
								
						ELSE 
							BEGIN
								INSERT INTO @TAB1

								SELECT EMPLOYEE_MASTER_KEY,DISBURSING_AMOUNT FROM DTLS_DISBURSEMENT DD 
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1
								
							
								SELECT  TB.DISBURSING_AMNT	AS 'NET AMOUNT',
								0 AS 'DISBURSING_AMOUNT',
								0 AS 'COMPLETE_FLAG',
								EM.Employee_Name ,EM.EMPLOYEE_MASTER_KEY
								FROM DTLS_DISBURSEMENT DD ,EMPLOYEE_MASTER EM ,@TAB1 TB
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY
								AND DD.EMPLOYEE_MASTER_KEY=EM.EMPLOYEE_MASTER_KEY AND DD.EMPLOYEE_MASTER_KEY=TB.EMP_KEY
								AND DD.LATEST_FLAG=1
							END

					END
				
				ELSE
					BEGIN
					SELECT DISTINCT
				
								EM.Employee_Name,
								EM.EMPLOYEE_MASTER_KEY,
								MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
								AMOUNT AS 'NET AMOUNT',
								0 AS 'DISBURSING_AMOUNT',
								0	AS 'COMPLETE_FLAG'
							FROM
								EMPLOYEE_MASTER EM

						INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
						INNER JOIN MAST_HRD_PERSONNEL_CLAIM MHPC ON MHPC.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY
						INNER JOIN MAST_HRD_PERSONNEL_CLAIM_DETAILS MHPCD ON MHPCD.MAST_HRD_PERSONNEL_CLAIM_KEY=MHPC.MAST_HRD_PERSONNEL_CLAIM_KEY
						WHERE EM.StatusKey = 1	AND MHPC.MAST_HRD_PERSONNEL_CLAIM_KEY=@HEAD_KEY
							AND MHPC.FROM_DATE >=@ConvertedFromDate AND MHPC.TO_DATE <=@ConvertedToDate
						
				
					END
			
				
			END
		END

		IF(@MAST_DISBURSEMENT_TYPE_KEY=3) -- ADVANCE
		BEGIN
			IF (@GET_REC_TYPE = 'DETAILS')
			BEGIN

			IF EXISTS (SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY)
					BEGIN

					 IF EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY AND COMPLETE_FLAG=1 )
						BEGIN
							SELECT DISTINCT
				
								EM.Employee_Name,
								EM.EMPLOYEE_MASTER_KEY,
								MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
								APPROVED_ADVANCE_AMOUNT AS 'NET AMOUNT',
								APPROVED_ADVANCE_AMOUNT AS 'DISBURSING_AMOUNT',
								1	AS 'COMPLETE_FLAG'
							FROM
								EMPLOYEE_MASTER EM

							INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
							INNER JOIN MAST_HRD_ADVANCE_APPLICATION MHAA ON 
							MHAA.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY
							--INNER JOIN DTLS_SALARY_HEAD DSH ON MDP.EMPLOYEE_MASTER_KEY=DSH.EMPLOYEE_MASTER_KEY
							WHERE EM.StatusKey = 1	AND  MHAA.MAST_HRD_ADVANCE_APPLICATION_KEY=@HEAD_KEY
							AND MHAA.ADVANCE_REFUND_STARTDATE >=@ConvertedFromDate AND MHAA.ADVANCE_REFUND_ENDDATE <=@ConvertedToDate
							END
								
						ELSE 
							BEGIN
								INSERT INTO @TAB1

								SELECT EMPLOYEE_MASTER_KEY,DISBURSING_AMOUNT FROM DTLS_DISBURSEMENT DD 
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1
								
							
								SELECT  TB.DISBURSING_AMNT	AS 'NET AMOUNT',
								0 AS 'DISBURSING_AMOUNT',
								0 AS 'COMPLETE_FLAG',
								EM.Employee_Name ,EM.EMPLOYEE_MASTER_KEY
								FROM DTLS_DISBURSEMENT DD ,EMPLOYEE_MASTER EM ,@TAB1 TB
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY
								AND DD.EMPLOYEE_MASTER_KEY=EM.EMPLOYEE_MASTER_KEY AND DD.EMPLOYEE_MASTER_KEY=TB.EMP_KEY
								AND DD.LATEST_FLAG=1
							END

					END
				
				ELSE
					BEGIN
					SELECT DISTINCT
				
								EM.Employee_Name,
								EM.EMPLOYEE_MASTER_KEY,
								MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
								APPROVED_ADVANCE_AMOUNT AS 'NET AMOUNT',
								0 AS 'DISBURSING_AMOUNT',
								0	AS 'COMPLETE_FLAG'
							FROM
								EMPLOYEE_MASTER EM

						INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
						INNER JOIN MAST_HRD_ADVANCE_APPLICATION MHAA ON MHAA.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY
							--INNER JOIN DTLS_SALARY_HEAD DSH ON MDP.EMPLOYEE_MASTER_KEY=DSH.EMPLOYEE_MASTER_KEY
						WHERE EM.StatusKey = 1	AND  MHAA.MAST_HRD_ADVANCE_APPLICATION_KEY=@HEAD_KEY
						AND MHAA.ADVANCE_REFUND_STARTDATE >=@ConvertedFromDate AND MHAA.ADVANCE_REFUND_ENDDATE <=@ConvertedToDate
						
				
					END
			
				
			END
		END

		IF(@MAST_DISBURSEMENT_TYPE_KEY=4) -- BONUS
		BEGIN
			IF (@GET_REC_TYPE = 'DETAILS')
			BEGIN

				IF EXISTS (SELECT * FROM DTLS_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY)
					BEGIN
					
						IF EXISTS (SELECT * FROM HEAD_DISBURSEMENT WHERE HEAD_DISBURSEMENT_KEY = @HEAD_DISBURSEMENT_KEY AND COMPLETE_FLAG=1 )
						BEGIN
							SELECT
								EM.Employee_Name,
								EM.EMPLOYEE_MASTER_KEY,
								MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
								NET_BONUS AS 'NET AMOUNT',
								NET_BONUS AS 'DISBURSING_AMOUNT',
								1	AS 'COMPLETE_FLAG'
							FROM
								EMPLOYEE_MASTER EM
				
							INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
						--	INNER JOIN MAST_HRD_DRAFT_PERSONNEL_PF_ESI PFESI ON MDP.MAST_HRD_DRAFT_PERSONNEL_KEY = PFESI.MAST_HRD_DRAFT_PERSONNEL_KEY 
							INNER JOIN DTLS_BONUS_HEAD DBH ON MDP.EMPLOYEE_MASTER_KEY=DBH.EMPLOYEE_MASTER_KEY
							WHERE EM.StatusKey = 1	AND DBH.HEAD_BONUS_KEY=@HEAD_KEY AND DBH.BONUS_FROM_DATE >=@ConvertedFromDate
							AND DBH.BONUS_TO_DATE <=@ConvertedToDate

							END
							
							
				
							ELSE
							BEGIN
							

							INSERT INTO @TAB1

								SELECT EMPLOYEE_MASTER_KEY,DISBURSING_AMOUNT FROM DTLS_DISBURSEMENT DD 
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1
								
							--DECLARE @COUNT INT
							--SELECT @COUNT=COUNT(*) FROM DTLS_DISBURSEMENT DD 
							--WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY AND DD.LATEST_FLAG=1
							
							
								SELECT  TB.DISBURSING_AMNT	AS 'NET AMOUNT',
								0 AS 'DISBURSING_AMOUNT',
								0 AS 'COMPLETE_FLAG',
								EM.Employee_Name ,EM.EMPLOYEE_MASTER_KEY
								FROM DTLS_DISBURSEMENT DD ,EMPLOYEE_MASTER EM ,@TAB1 TB
								WHERE DD.HEAD_DISBURSEMENT_KEY=@HEAD_DISBURSEMENT_KEY
								AND DD.EMPLOYEE_MASTER_KEY=EM.EMPLOYEE_MASTER_KEY AND DD.EMPLOYEE_MASTER_KEY=TB.EMP_KEY
								AND DD.LATEST_FLAG=1

							END
							
					END
				ELSE 
				BEGIN
				 SELECT DISTINCT
				
								EM.Employee_Name,
								EM.EMPLOYEE_MASTER_KEY,
								
								NET_BONUS AS 'NET AMOUNT',
								0 AS 'DISBURSING_AMOUNT',
								0	AS 'COMPLETE_FLAG'
							FROM
								EMPLOYEE_MASTER EM
				
							--INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
						--	INNER JOIN MAST_HRD_DRAFT_PERSONNEL_PF_ESI PFESI ON MDP.MAST_HRD_DRAFT_PERSONNEL_KEY = PFESI.MAST_HRD_DRAFT_PERSONNEL_KEY 
							INNER JOIN DTLS_BONUS_HEAD DBH ON EM.EMPLOYEE_MASTER_KEY=DBH.EMPLOYEE_MASTER_KEY
							INNER JOIN DTLS_BONUS_DTLS DBD ON DBH.DTLS_BONUS_HEAD_KEY=DBD.DTLS_BONUS_HEAD_KEY

							WHERE EM.StatusKey = 1 AND DBH.HEAD_BONUS_KEY=@HEAD_KEY	AND DBH.BONUS_FROM_DATE >=@ConvertedFromDate
							AND DBH.BONUS_TO_DATE <=@ConvertedToDate
				
				 END
			END
		END

END



--select * from MAST_DISBURSEMENT_TYPE
--	SELECT DISTINCT
				--	ESM.Employee_Subdivision_Map_Key,
				--	EM.Employee_Name,
				--	VES.WareHouse_ID AS WAREHOUSE_KEY,
				--    EM.EMPLOYEE_MASTER_KEY,
				--	MDP.MAST_HRD_DRAFT_PERSONNEL_KEY,
				--	TCP.CompanyId,
				--	TCP.COMPANY_NAME,
				--	ESM.Mast_StaffType_Key,
				--	ESM.Mast_Designation_Key,
				--	NET_BONUS AS 'NET AMOUNT',
				--	0 AS 'DISBURSING_AMOUNT'
				--	--PFESI.PF_EXEMPTED,
				--	--PFESI.ESI_EXEMPTED,
				--	--PFESI.IT_EXEMPTED,
				--	--PFESI.PT_EXEMPTED,
				--	--PFESI.TAG_OLD_NEW
				--FROM
				--	EMPLOYEE_MASTER EM
				--INNER JOIN Employee_Subdivision_Map ESM ON EM.EMPLOYEE_MASTER_KEY = ESM.EMPLOYEE_MASTER_KEY
				--INNER JOIN V_EMP_SUB_DIVISIONS VES ON ESM.Employee_Subdivision_Map_Key = VES.Employee_Subdivision_Map_Key
				--INNER JOIN TenantCompanyProfile TCP ON ESM.CompanyId = TCP.CompanyId 
				--INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
				--INNER JOIN MAST_HRD_DRAFT_PERSONNEL_PF_ESI PFESI ON MDP.MAST_HRD_DRAFT_PERSONNEL_KEY = PFESI.MAST_HRD_DRAFT_PERSONNEL_KEY 
				--INNER JOIN DTLS_BONUS_HEAD DBH ON MDP.EMPLOYEE_MASTER_KEY=DBH.EMPLOYEE_MASTER_KEY
				----	AND PFESI.TAG_OLD_NEW = 2
				--WHERE
				--	TCP.CompanyId = @COMPANY_KEY
				--	AND EM.StatusKey = 1

				--	AND DBH.BONUS_FROM_DATE >=@ConvertedFromDate AND DBH.BONUS_TO_DATE <=@ConvertedToDate

				--	AND (VES.WareHouse_ID IN (SELECT WarehouseKey FROM @WarehouseTable))
				--	AND (VES.Division_ID IN (SELECT DivisionKey FROM @DivisionTable))


							--	SELECT DISTINCT
							--		EM.Employee_Name,
							--		EM.EMPLOYEE_MASTER_KEY,
							--		BONUS_AMOUNT AS 'NET AMOUNT', -- NET_BONUS
							--		0 AS 'DISBURSING_AMOUNT',
							--		0	AS 'COMPLETE_FLAG'
							--		FROM
							--		EMPLOYEE_MASTER EM
				
							----INNER JOIN MAST_HRD_DRAFT_PERSONNEL MDP ON MDP.EMPLOYEE_MASTER_KEY = EM.EMPLOYEE_MASTER_KEY 
							--INNER JOIN DTLS_BONUS_HEAD DBH ON EM.EMPLOYEE_MASTER_KEY=DBH.EMPLOYEE_MASTER_KEY
							--INNER JOIN DTLS_BONUS_DTLS DBD ON DBH.DTLS_BONUS_HEAD_KEY=DBD.DTLS_BONUS_HEAD_KEY

							--WHERE EM.StatusKey = 1	AND DBH.BONUS_FROM_DATE >='2024-01-01'	AND DBH.BONUS_TO_DATE <='2024-01-31'